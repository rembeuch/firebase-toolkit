{"ast":null,"code":"var _jsxFileName = \"/home/beucherier/code/rembeuch/firebase/src/components/CommentPost.js\",\n    _s = $RefreshSig$();\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport React, { useRef, useState } from \"react\";\nimport { auth, db } from \"../utils/firebase.config\";\nimport CommentCard from \"./CommentCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentPost = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const answerContent = useRef();\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n\n  const handleComment = e => {\n    e.preventDefault();\n    let data = [];\n\n    if (post.comments === null) {\n      data = [{\n        commentAuthor: user.displayName,\n        text: answerContent.current.value\n      }];\n    } else {\n      data = [...post.comments, {\n        commentAuthor: user.displayName,\n        text: answerContent.current.value\n      }];\n    }\n\n    updateDoc(doc(db, \"posts\", post.id), {\n      comments: data\n    }).then(() => {\n      answerContent.current.value = \"\";\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"comment-title\",\n      children: \"Commentaires\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), post.comments && post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(CommentCard, {\n      comment: comment\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)), user ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleComment(e),\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Envoyer un commentaire\",\n        ref: answerContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Vous devez \\xEAtre connect\\xE9 pour poster un commentaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentPost, \"BYXYdO/QHPIyWMy6x9o69P/OP4Y=\");\n\n_c = CommentPost;\nexport default CommentPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentPost\");","map":{"version":3,"sources":["/home/beucherier/code/rembeuch/firebase/src/components/CommentPost.js"],"names":["onAuthStateChanged","doc","updateDoc","React","useRef","useState","auth","db","CommentCard","CommentPost","post","user","setUser","answerContent","currentUser","handleComment","e","preventDefault","data","comments","commentAuthor","displayName","text","current","value","id","then","map","comment","index"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,eAAnC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,WAAW,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMQ,aAAa,GAAGT,MAAM,EAA5B;AAEAJ,EAAAA,kBAAkB,CAACM,IAAD,EAAQQ,WAAD,IAAiB;AACxCF,IAAAA,OAAO,CAACE,WAAD,CAAP;AACD,GAFiB,CAAlB;;AAIA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAIR,IAAI,CAACS,QAAL,KAAkB,IAAtB,EAA4B;AAC1BD,MAAAA,IAAI,GAAG,CACL;AACEE,QAAAA,aAAa,EAAET,IAAI,CAACU,WADtB;AAEEC,QAAAA,IAAI,EAAET,aAAa,CAACU,OAAd,CAAsBC;AAF9B,OADK,CAAP;AAMD,KAPD,MAOO;AACLN,MAAAA,IAAI,GAAG,CACL,GAAGR,IAAI,CAACS,QADH,EAEL;AACEC,QAAAA,aAAa,EAAET,IAAI,CAACU,WADtB;AAEEC,QAAAA,IAAI,EAAET,aAAa,CAACU,OAAd,CAAsBC;AAF9B,OAFK,CAAP;AAOD;;AAEDtB,IAAAA,SAAS,CAACD,GAAG,CAACM,EAAD,EAAK,OAAL,EAAcG,IAAI,CAACe,EAAnB,CAAJ,EAA4B;AAAEN,MAAAA,QAAQ,EAAED;AAAZ,KAA5B,CAAT,CACCQ,IADD,CACM,MAAM;AAEVb,MAAAA,aAAa,CAACU,OAAd,CAAsBC,KAAtB,GAA8B,EAA9B;AACD,KAJD;AAKD,GA3BD;;AA6BA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGd,IAAI,CAACS,QAAL,IACCT,IAAI,CAACS,QAAL,CAAcQ,GAAd,CAAkB,CAACC,OAAD,EAAUC,KAAV,kBAChB,QAAC,WAAD;AAAyB,MAAA,OAAO,EAAED;AAAlC,OAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ,EAOGlB,IAAI,gBACH;AAAM,MAAA,QAAQ,EAAGK,CAAD,IAAOD,aAAa,CAACC,CAAD,CAApC;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,wBADd;AAEE,QAAA,GAAG,EAAEH;AAFP;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1DD;;GAAMJ,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport React, { useRef, useState } from \"react\";\nimport { auth, db } from \"../utils/firebase.config\";\nimport CommentCard from \"./CommentCard\";\n\nconst CommentPost = ({ post }) => {\n  const [user, setUser] = useState(null);\n  const answerContent = useRef();\n\n  onAuthStateChanged(auth, (currentUser) => {\n    setUser(currentUser);\n  });\n\n  const handleComment = (e) => {\n    e.preventDefault();\n\n    let data = [];\n\n    if (post.comments === null) {\n      data = [\n        {\n          commentAuthor: user.displayName,\n          text: answerContent.current.value,\n        },\n      ];\n    } else {\n      data = [\n        ...post.comments,\n        {\n          commentAuthor: user.displayName,\n          text: answerContent.current.value,\n        },\n      ];\n    }\n\n    updateDoc(doc(db, \"posts\", post.id), { comments: data })\n    .then(() => {\n       \n      answerContent.current.value = \"\";\n    })\n  };\n\n  return (\n    <div className=\"comment-container\">\n      <h5 className=\"comment-title\">Commentaires</h5>\n      {post.comments &&\n        post.comments.map((comment, index) => (\n          <CommentCard key={index} comment={comment} />\n        ))}\n\n      {user ? (\n        <form onSubmit={(e) => handleComment(e)}>\n          <textarea\n            placeholder=\"Envoyer un commentaire\"\n            ref={answerContent}\n          ></textarea>\n          <input type=\"submit\" value=\"Envoyer\" />\n        </form>\n      ) : (\n        <p>Vous devez être connecté pour poster un commentaire</p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentPost;\n"]},"metadata":{},"sourceType":"module"}